1. Giải thích các câu lệnh: git commit --amend, git commit --amend -"<message>", git restore --staged <file>, git reset HEAD~1

- git commit --amend: thay đổi commit message, nhưng phải thực hiện 1 số thao tác sau
+ Gõ i -> vào chế độ insert
+ Gõ esc để thoát insert
+ Gõ “"wq" -> write and quit
bài sửa: vào giao diện thay đổi message của commit gần nhất
- git commit --amend -m"message": thay đổi commit message
bài sửa: thay đổi message của commit gần nhất trực tiếp mà không cần vào giao diện
- git restore --staged <file>: Đưa <file> từ vùng staging về working directory
- git reset HEAD~1: Đưa tất cả các file changes của 1 commit từ vùng repository về working directory (uncommit)

bài sửa: cả git commit --amend và git commit --amend -m"message" => 2 câu lệnh này để thay đổi commit msg gần nhất

2. Hãy tưởng tượng có 1 folder lesson-3 mới được tạo. Hãy liệt kê các file theo từng vùng, liệt kê các commit và message tương ứng sau khi thao tác một loạt các lệnh sau
(sẽ rất tuyệt vời nếu bạn không chạy trên máy tính thật, mà bạn chạy trong đầu, sẽ giúp bạn hiểu về Git rõ ràng hơn):

a. Tạo 3 file: file1, file2, file3
b. Chạy lệnh: git init
    - Working directory: file1, file2, file3
    - Staging:
    - Repository:
c. Chạy lệnh: git commit -m”init project”
    - Working directory: file1, file2, file3
    - Staging:
    - Repository:
d. Chạy lệnh: git add file1
    - Working directory: file2, file3
    - Staging: file1
    - Repository:
e. Chạy lệnh: git commit -m”add file”
    - Working directory: file2, file3
    - Staging:
    - Repository: file1
f. Chạy lệnh: git add .
    - Working directory:
    - Staging: file2, file3
    - Repository: file1
g. Chạy lệnh: git restore --staged file2
    - Working directory: file2
    - Staging: file3
    - Repository: file1
h. Chạy lệnh: git commit -m”add all files”
    - Working directory: file2
    - Staging:
    - Repository: file1, file3
i. Chạy lệnh: git reset HEAD~1
    - Working directory: file2, file3
    - Staging:
    - Repository: file1

3. Hãy tưởng tượng có 1 folder lesson-3-git mới được tạo ra. Hãy liệt kê các file theo từng vùng sau khi thao tác các lệnh sau:
a. Chạy lệnh git init
b. Tạo file file1.txt, file2.txt, oops/file3.txt
c. Thêm file .gitignore, thêm vào 2 dòng:
i. file1.txt
ii. oops/
----
a. Chạy lệnh git init
- Khởi tạo git Repository "lesson-3-git"
    - Working directory:
    - Staging:
    - Repository:
b. Tạo file file1.txt, file2.txt, oops/file3.txt
Những file mới được tạo nằm trong vùng working directory
    - Working directory: file1.txt, file2.txt, oops/file3.txt
    - Staging:
    - Repository:
c. Thêm file .gitignore, thêm vào 2 dòng:
i. file1.txt
ii. oops/
    - Working directory: file1.txt, file2.txt, oops/file3.txt (Sau khi add 2 file file1.txt và file3 vào git ignore, thì 2 file này không thuộc quyền quản lý của git nữa => không xuất hiện ở working directory
file .gitignore vẫn thuộc quyền quản lý bởi git, vẫn xuất hiện ở các vùng của git như bình thường )
    - Staging:
    - Repository:
d. Chạy lệnh: git add .
    - Working directory: file1.txt, oops/file3.txt
    - Staging: file2.txt
    - Repository:
e. Chạy lệnh: git commit -m"init project"
    - Working directory: file1.txt, oops/file3.txt
    - Staging:
    - Repository: file2.txt